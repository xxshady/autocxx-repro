name: Test

env:
  RUST_BACKTRACE: short
  # CI builds don't benefit very much from this and it has bugs
  CARGO_INCREMENTAL: 0
  # We can't use a debugger in CI, and this makes builds faster and the cache
  # smaller. (TODO: use -Cdebuginfo=0 if it doesn't make backtraces useless)
  RUSTFLAGS: -Cdebuginfo=1
  CARGO_TERM_COLOR: always

on:
  push:
    branches: "*"
  pull_request:

jobs:
  test2:
    name: Test ${{matrix.name || format('Rust {0}', matrix.rust)}}
    runs-on: ${{matrix.os || 'ubuntu'}}-latest

    strategy:
      fail-fast: false

      matrix:
        include:
          # Windows GNU disabled due to https://github.com/google/autocxx/issues/1134
          # - name: Windows (gnu)
          #    rust: nightly-x86_64-pc-windows-gnu
          #    os: windows
          - name: Windows (msvc)
            rust: nightly-x86_64-pc-windows-msvc
            os: windows
            flags: /EHsc
    env:
      CXXFLAGS: ${{matrix.flags}}
      RUSTFLAGS: --cfg deny_warnings -Dwarnings

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{matrix.rust}}
          components: rustfmt
      # The `{ sharedKey: ... }` allows different actions to share the cache.
      - uses: Swatinem/rust-cache@v1
        with: { sharedKey: fullBuild }
      # For operating systems that have it packaged, install creduce
      - name: build
        shell: cmd
        run: |
          set PATH=%PATH:C:\Program Files\LLVM\bin;=%
          echo %PATH%
          cargo build
